var ClipIndex = -1;
window.onload = function() {
    $(".bf-title").on("mousedown", OnbfTitleClick);
    $(".bf-close").on("click", OnbfCloseClick);
    $(".bf-select-current").on("click", OnbfSelectionClick);
    $(".bf-select-option").on("click", OnbfSelectionOptionClick);
    $(".my-axial").on("click", OnbfSelectionOptionAxialClick);
    $("#divProperty").preventScroll();
    $("#divBfTree").preventScroll();
    $("#treeComponent").on("click",
    function() {
        viewer.ovo3(1)
    });
    $("#treeAll").on("click",
    function() {
        viewer.ovo3(0)
    });
    $("#treeLevel").on("click",
    function() {
        viewer.ovo3(2)
    });
    $(".bf-tree-toolbar").on("click",
    function(a) {
        document.getElementById("divTree").style.display = "block"
    });
    $(".gld-bf-properties").on("click",
    function(a) {
        a.target.classList.contains("bf-checked") ? (a.target.classList.remove("bf-checked"), document.getElementById("property-panel").style.display = "none") : (a.target.classList.add("bf-checked"), document.getElementById("property-panel").style.display = "block")
    });
    //剖切
    $(".gld-bf-section-axial").on("click",
    function(a) {
        var b = a.target.classList.contains("bf-checked");
        viewer.dr5e(!b);
        b ? (a.target.classList.remove("bf-checked"), document.getElementById("axiDiv").style.display = "none") : (a.target.classList.add("bf-checked"), document.getElementById("axiDiv").style.display = "block")
    });
    // AmbroseRen——量尺
    $(".gld-bf-measure").on("click",
    function(a) {
    	console.log("Click_gld-bf-measure");
    	a.target.classList.contains("bf-checked") ? (a.target.classList.remove("bf-checked"), document.getElementById("distinceDiv").style.display = "none") : (a.target.classList.add("bf-checked"), document.getElementById("distinceDiv").style.display = "block")
    });
    
    $(".gld-bf-information").on("click",
    function(a) {
    	console.log("Click_gld-bf-information");
        a.target.classList.contains("bf-checked") ? (a.target.classList.remove("bf-checked"), document.getElementById("modalInfoDiv").style.display = "none") : (a.target.classList.add("bf-checked"), document.getElementById("modalInfoDiv").style.display = "block")
    });
    $(".gld-bf-lookat").on("click",
    function() {
        viewer.tt4()
    });
    $(".gld-bf-zoomrect").on("click",
    function(a) {
        viewer.ovo8();
        a.target.classList.contains("bf-checked") ? a.target.classList.remove("bf-checked") : a.target.classList.add("bf-checked")
    });
    $(".gld-bf-circlelook").on("click",
    function(a) {
        viewer.lookAtCenter = !viewer.lookAtCenter;
        a.target.classList.contains("bf-checked") ? a.target.classList.remove("bf-checked") : a.target.classList.add("bf-checked")
    });
    $(".gld-bf-walk").on("click",
    function(a) {
        viewer.stopRander = !0;
        a.target.classList.contains("bf-checked") ? a.target.classList.remove("bf-checked") : a.target.classList.add("bf-checked");
        viewer.setWalk();
        controls = viewer.kiul8(1);
        viewer.stopRander = !1
    });
    $(".gld-bf-dingwei").on("click",
    function(a) {
        var b = a.target.classList.contains("bf-checked");
        b ? a.target.classList.remove("bf-checked") : a.target.classList.add("bf-checked");
        viewer.yoy2(!b)
    });
    $(".gld-bf-home").on("click",
    function() {
        controls.target.set(0, 0, 0);
        camera.position.set(400, -400, 400);
        controls.update()
    });
    $("#axial-progress").on("click",
    function(a) {
        a.returnValue = !1;
        a.stopPropagation()
    });
    $("#axial-progress").on("mousedown",
    function(a) {
        a.returnValue = !1;
        a.stopPropagation()
    });
    $("#axial-progress").on("mouseup",
    function(a) {
        a.returnValue = !1;
        a.stopPropagation()
    });
    $("#axial-progress").on("input propertychange",
    function(a) {
        console.log(a.target.value);
        tot3(ClipIndex, a.target.value)
    })
};
function initTree() {
    var a = new TreeNode("\u5168\u90e8\u5206\u7c7b1");
    document.getElementById("divBfTree").appendChild(a.element);
    var b = new TreeNode("JModelByZhengtengzhou");
    a.addChildNode(b)
}
function setClipIndex(a) { - 1 == ClipIndex ? (ClipIndex = a, onClip(ClipIndex)) : ClipIndex != a ? (onClip(ClipIndex), ClipIndex = a, onClip(ClipIndex)) : (onClip(ClipIndex), ClipIndex = -1)
}
function OnbfSelectionOptionAxialClick(a) {
    "X\u8f74" === a.target.innerHTML && setClipIndex(0);
    "Y\u8f74" === a.target.innerHTML && setClipIndex(1);
    "Z\u8f74" === a.target.innerHTML && setClipIndex(2);
    "-X\u8f74" === a.target.innerHTML && setClipIndex(3);
    "-Y\u8f74" === a.target.innerHTML && setClipIndex(4);
    "-Z\u8f74" === a.target.innerHTML && setClipIndex(5);
    a.target.classList.contains("axial-checked") ? a.target.classList.remove("axial-checked") : a.target.classList.add("axial-checked")
}
function OnbfSelectionOptionClick(a) {
    console.log(a.target);
    var b = a.target.parentNode.parentNode.getElementsByClassName("bf-select-current");
    b[0].innerHTML = a.target.innerHTML;
    b[0].classList.remove("bf-open")
}
// 楼层、构件目录显示、隐藏
function OnbfSelectionClick(a) {
    console.log(a.target);
    a = a.target;
    a.classList.contains("bf-open") ? a.classList.remove("bf-open") : a.classList.add("bf-open")
}
function OnbfCloseClick(a) {
    console.log(a.target);
    a.target.parentNode.style.display = "none"
}
function OnbfTitleClick(a) {
    function b(a) {
        a || (a = window.event);
        c.style.left = a.clientX - d + "px";
        c.style.top = a.clientY - f + "px";
        a.cancelBubble = !0
    }
    function e(a) {
        console.log("end");
        a || (a = window.event);
        document.removeEventListener("mousemove", b);
        document.removeEventListener("mouseup", e);
        a.cancelBubble = !0
    }
    console.log(a.target);
    var c = a.target.parentNode,
    d = event.clientX - parseInt(c.style.left);
    "50%" == c.style.left && (d = event.clientX - .5 * document.body.clientWidth);
    "" == c.style.left && (d = event.clientX - parseInt(c.offsetLeft));
    var f = event.clientY - parseInt(c.style.top);
    "50%" == c.style.left && (f = event.clientY - .5 * document.body.clientHeight);
    "" == c.style.left && (f = event.clientY - parseInt(c.offsetTop));
    document.addEventListener("mousemove", b);
    document.addEventListener("mouseup", e);
    console.log("begin");
    event.cancelBubble = !0;
    event.returnValue = !1
}
function iIi2() {
    var a = document.getElementById("viewcube");
    viewcube = new FOUR.Viewcube({
        domElement: a,
        labelSize: 150,
        labelFontSize: 36,
        updateTween: !1,
        display: {
            sceneAxis: !0
        },
        viewport: {
            camera: camera
        }
    });
    viewcube.enable();
    controls.addEventListener("change",
    function() {
        viewcube.updateOrientation()
    });
    viewcube.addEventListener("update",
    function(a) {
        a = a.direction;
        ilI4(camera, new THREE.Vector3, a.yaw, a.pitch, !0)
    })
}
function lIi3(a, b) {
    var e = new THREE.Spherical,
    c = new THREE.Vector3,
    d = (new THREE.Quaternion).setFromUnitVectors(a.up, new THREE.Vector3(0, 1, 0));
    c.copy(a.position).sub(b);
    c.applyQuaternion(d);
    e.setFromVector3(c);
    return {
        yaw: e.theta,
        pitch: Math.PI / 2 - e.phi
    }
}
function ilI4(a, b, e, c, d) {
    "undefined" === typeof d && (d = !1);
    d ? iIi5(a, b, e, c) : ili6(a, b, e, c)
}
function iIi5(a, b, e, c) {
    var d = lIi3(a, b),
    f = {
        yaw: e,
        pitch: c
    },
    g = (new TWEEN.Tween(d)).to(f, 1E3);
    g.easing(TWEEN.Easing.Cubic.InOut);
    g.onComplete(function() {
        ili6(a, b, e, c);
        g.stop()
    });
    g.onUpdate(function() {
        ili6(a, b, this.yaw, this.pitch)
    });
    g.start()
}
function ili6(a, b, e, c) {
    var d = new THREE.Spherical,
    f = new THREE.Vector3,
    g = (new THREE.Quaternion).setFromUnitVectors(a.up, new THREE.Vector3(0, 1, 0)),
    h = g.clone().inverse();
    f.copy(a.position).sub(b);
    f.applyQuaternion(g);
    d.setFromVector3(f);
    c = -c + Math.PI / 2 - d.phi;
    d.theta += e - d.theta;
    d.phi += c;
    d.makeSafe();
    f.setFromSpherical(d);
    f.applyQuaternion(h);
    a.position.copy(b).add(f);
    a.lookAt(b)
};
// # sourceMappingURL=page.min.js.map
